- content_for :page_content do
  = initjs_tag app_name: 'Neighborly', partial: true
  #user-profile-content.row
    .large-8.columns
      = simple_form_for resource do |f|
        = f.input :profile_type, collection: {' Person'=> 'personal', ' Company / Organization'=> 'company'}, as: :radio_buttons
        #personal_images.profile_type_images.row style="#{"display: none;" unless @user.profile_type == 'personal'}"
          .large-4.columns
            .usr-upld-img.usr-upld-pctr data-param="uploaded_image"
              span.info Drop an image here
              = image_tag @user.uploaded_image_url(:thumb_avatar), class: "uploaded-image"
            = f.input :uploaded_image, as: :file, input_html: { class: 'fallback' }
          .large-8.columns
            .usr-upld-img.usr-upld-cvr data-param="hero_image"
              span.info Drop an image here
              = image_tag @user.hero_image_url(:blur), class: "uploaded-image"
            = f.input :hero_image, as: :file, input_html: { class: 'fallback' }
        #company_images.profile_type_images.row style="#{"display: none;" unless @user.profile_type == 'company'}"
          .large-4.columns
            .usr-upld-img.usr-upld-cp data-param="company_logo"
              span.info Drop an image here
              = image_tag @user.company_logo_url(:thumb), class: "uploaded-image"
            = f.input :company_logo, as: :file, input_html: { class: 'fallback' }
          .large-8.columns
            .usr-upld-img.usr-upld-cvr data-param="hero_image"
              span.info Drop an image here
              = image_tag @user.hero_image_url(:blur), class: "uploaded-image"
            = f.input :hero_image, as: :file, input_html: { class: 'fallback' }
        .large-12.columns
          #personal-name.profile-type-name.row style="#{"display: none;" unless @user.profile_type == 'personal'}"
            = f.input :name, as: :string
          #company-name.profile-type-name.row style="#{"display: none;" unless @user.profile_type == 'company'}"
            = f.input :company_name, as: :string
        = f.input :email, as: :string
        = f.input :bio
        .row
          .large-6.columns
            = f.input :phone_number, as: :string
          .large-6.columns
            = f.input :other_link
        h3 = t('.omniauth.title')
        .row
          - for provider in OauthProvider.all
            .large-6.columns
              - authorization = @user.authorizations.where(oauth_provider_id: provider.id).first
              - if authorization
                = link_to t(".omniauth.disconnect.#{provider.name}"), user_authorization_path(@user, authorization), method: :delete, class: [:button, provider.name, 'small-12 large-12', 'columns',  'with-icon', 'secondary']
              - else
                = link_to t(".omniauth.connect.#{provider.name}"), user_omniauth_authorize_path(provider: provider.name), class: [:button, provider.name, 'small-12 large-12', 'columns',  'with-icon']

        h3
          = t('.address_title')
          br/
          small= t('.address_subtitle')
        = f.input :address_street, as: :string
        .row
          .large-8.columns
            = f.input :address_neighbourhood, as: :string
          .large-4.columns
            = f.input :address_zip_code, as: :string
        .address.address-coordinates.pin-img[data-longitude=resource.longitude data-latitude=resource.latitude data-image-url=image_url('pin.png')]
          = f.input :address, input_html: { class: 'search-cities-with-google', autocomplete: :off }
          .map-canvas
        = f.button :submit, disable_with: t('words.sending')

- if request.xhr? || defined?(partial)
  = yield :page_content
- else
  = render template: 'users/edit'
