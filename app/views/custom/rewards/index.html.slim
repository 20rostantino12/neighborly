- collection.rank(:row_order).each do |reward|
  div[id="reward-#{reward.id}" data-update-path=sort_project_reward_path(parent, reward) class="reward #{ 'sortable' if can?(:update, reward) } #{ 'soon' if reward.soon? }"]
    .title
      = t('.reward_title', minimum: reward.display_minimum).html_safe
      - if can?(:update, reward)
        = link_to edit_project_reward_path(@project, reward), data: { element: ".edit-#{reward.id}-reward-form", path: edit_project_reward_path(@project, reward) }, class: 'edit' do
          i.icon-pencil


    div[class="edit-#{reward.id}-reward-form"]
      .loading.hide
        = image_tag 'loading.gif'
      .form-content.hide


    - if reward.maximum_backers
      - if reward.sold_out?
        .sold-out
          .wrapper
            h4
              i.icon-et-cancel-squared
              br/
              = t('.sold_out')
      .maximum-backers
        i.icon-et-alert
        = reward.display_remaining

        - in_time_to_confirm = reward.backers.with_state('waiting_confirmation').count
        - if in_time_to_confirm > 0
          .pending = t('.backs_to_confirm', count: in_time_to_confirm)

    .description = reward.display_description

    - if parent.online? && !reward.sold_out? && !reward.soon?
      .contribute
        = link_to t('.contribute'), new_project_backer_path(parent, reward_id: reward.id), class: 'button'

    - if reward.show_contact_button
      .contact
        = link_to t('.contact'), reward_contact_project_path(parent), class: 'button', data: { 'reveal-id' => 'reward-contact', 'reveal-ajax' => true }

    - if reward.days_to_delivery.present?
      .days-to-delivery
        p = "#{t('.reward_deliver_time', prevision: reward.display_deliver_prevision)}".html_safe

- if can?(:update, parent)

  .reward.new-reward-form
    .loading.hide
      = image_tag 'loading.gif'
    .form-content.hide

  .reward.add-reward
    = link_to new_project_reward_path(parent), data: { element: '.new-reward-form', path: new_project_reward_path(parent) } do
      i.icon-et-plus
      br/
      = t('.add')

  /- if can?(:update, reward)
    .bootstrap-twitter.bootstrap-form
      .skull-modal.hide id="reward#{reward.id}Editor"
        .skull-modal-header
          h3= t('projects.rewards.edit_reward')
          a class='skull-modal-close' href='javascript:void(0);' &times;
        .skull-modal-body
          = image_tag 'loading.gif'


  /div[id="reward_#{reward.id}" data-new_backer_url=new_project_backer_path(parent, reward_id: reward.id) data-update_url=sort_project_reward_path(parent, reward) class="box #{(can?(:update, reward) ? 'clickable_owner sortable' : '')} #{(reward.soon?) ? 'soon' : ''} #{(parent.online? && !reward.sold_out? && !reward.soon? && !can?(:update, reward)  ? 'clickable'  : '' )}"]
    /- if can?(:update, reward)
      /.bootstrap-form.bootstrap-twitter 
        /.hide id="reward#{reward.id}Editor"
          /= image_tag 'loading.gif'
        /.bootstrap-twitter
          /= link_to "javascript:void(0);", data: {target: "#reward#{reward.id}Editor", path: edit_project_reward_path(@project, reward)}, class: 'show_reward_form btn btn-mini pull-right btn-primary' do
            /i.icon-pencil.icon-white

    /h2= t('projects.rewards.reward_title', minimum: reward.display_minimum).html_safe
    /- unless reward.soon?
      /em= pluralize(reward.backers.with_state('confirmed').count, t('backer_singular'), t('backer_plural'))
    /- else
      /em COMING SOON
    /.clearfix
    /p
      /= reward.display_description
    /- if reward.maximum_backers
      /.maximum_backers.clearfix
        /- if reward.sold_out?
          /.sold_out= t('reward.sold_out')
        /- else
          /.limited= t('reward.limited')
          /.remaining
            /= reward.display_remaining
      /- in_time_to_confirm = reward.backers.with_state('waiting_confirmation').count
      /- if in_time_to_confirm > 0
        /.maximum_backers.in_time_to_confirm.clearfix
          /.pending= t('projects.rewards.backs_to_confirm', count: in_time_to_confirm)
      /.clearfix
    /- if reward.days_to_delivery.present?
      /div class="reward_deliver_at"
        /p= "#{t('projects.rewards.reward_deliver_time', prevision: reward.display_deliver_prevision)}".html_safe
    //- if current_user && current_user.admin
      //div class="reward_updated_at"
        /p= "Modificado em: #{I18n.l(reward.updated_at.to_date)} #{parent.online_date.nil? ? '' : ((parent.online_date > reward.updated_at)? '(draft)' : '(online)')}"
      //- if reward.has_modification?
        /div class="description_version rewardVersioning#{reward.id}"
          /p= reward.last_description
        /.maximum_backers.with_state('waiting_confirmation').clearfix
          /.updated_reward
            /span id="rewardVersioning#{reward.id}"
              /= 'See the old version.'
    /- if reward.show_contact_button
      /p.bootstrap-twitter
        /br/
        /= link_to 'Please Contact Us', '#contactUsModal', style: 'color: white; text-decoration: none;', class: 'btn btn-info', :"data-toggle" => "modal"
/.clearfix



